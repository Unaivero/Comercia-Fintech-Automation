name: Comercia Fintech Automation CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * 1-5'  # Run daily at 6 AM, Monday to Friday

env:
  MAVEN_OPTS: "-Dmaven.repo.local=${{ github.workspace }}/.m2/repository"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        java: [11, 17, 21]
        browser: [chrome, firefox, edge]
        exclude:
          - os: macos-latest
            browser: edge
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Setup Chrome
      if: matrix.browser == 'chrome'
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: stable
    
    - name: Setup Firefox
      if: matrix.browser == 'firefox'
      uses: browser-actions/setup-firefox@v1
      with:
        firefox-version: latest
    
    - name: Setup Edge
      if: matrix.browser == 'edge' && matrix.os != 'macos-latest'
      uses: browser-actions/setup-edge@v1
      with:
        edge-version: stable
    
    - name: Run Unit Tests
      run: mvn clean test -Dtest="**/utils/*Test" -Dmaven.test.failure.ignore=true
    
    - name: Run Integration Tests
      run: |
        mvn clean test -Dbrowser=${{ matrix.browser }} -Dheadless.execution=true \
        -Denvironment=ci -Dparallel.execution=true -Dthread.count=3
      env:
        ENVIRONMENT: ci
        BROWSER: ${{ matrix.browser }}
    
    - name: Generate Allure Report
      if: always()
      run: |
        mvn allure:report
        mkdir -p allure-history
        cp -r target/allure-report/history/* allure-history/ || true
    
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.os }}-java${{ matrix.java }}-${{ matrix.browser }}
        path: |
          target/cucumber-reports/
          target/allure-report/
          target/surefire-reports/
        retention-days: 30
    
    - name: Publish Test Results
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: Test Results (${{ matrix.os }}-java${{ matrix.java }}-${{ matrix.browser }})
        path: target/surefire-reports/TEST-*.xml
        reporter: java-junit
        fail-on-error: false

  security-scan:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'Comercia-Fintech-Automation'
        path: '.'
        format: 'ALL'
        args: >
          --enableRetired
          --enableExperimental
          --failOnCVSS 7
    
    - name: Upload SARIF file
      if: always()
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: reports/dependency-check-report.sarif
    
    - name: Upload Dependency Check results
      uses: actions/upload-artifact@v3
      with:
        name: security-scan-report
        path: reports/

  performance-test:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Run Performance Tests
      run: |
        mvn clean test -Dtest="**/performance/*Test" \
        -Dperformance.users=50 -Dperformance.duration=300
    
    - name: Upload Performance Results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: target/performance-reports/

  deploy-reports:
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Setup Pages
      uses: actions/configure-pages@v3
    
    - name: Build report site
      run: |
        mkdir -p public
        # Combine all test results
        find . -name "allure-report" -exec cp -r {} public/allure-{} \;
        # Create index page
        cat > public/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>Comercia Fintech Test Reports</title>
            <style>
                body { font-family: Arial, sans-serif; margin: 40px; }
                .card { border: 1px solid #ddd; padding: 20px; margin: 10px 0; border-radius: 8px; }
                .success { border-left: 4px solid #28a745; }
                .danger { border-left: 4px solid #dc3545; }
                .warning { border-left: 4px solid #ffc107; }
            </style>
        </head>
        <body>
            <h1>🚀 Comercia Fintech Automation Reports</h1>
            <div class="card success">
                <h3>📊 Latest Test Results</h3>
                <p>Generated: $(date)</p>
                <a href="./allure-report/">View Allure Reports</a>
            </div>
            <div class="card warning">
                <h3>🔒 Security Scan</h3>
                <p>OWASP Dependency Check completed</p>
            </div>
            <div class="card">
                <h3>⚡ Performance Tests</h3>
                <p>Load testing results available</p>
            </div>
        </body>
        </html>
        EOF
    
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v2
      with:
        path: public
    
    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v2

  slack-notification:
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Determine Status
      id: status
      run: |
        if [[ "${{ needs.test.result }}" == "success" && "${{ needs.security-scan.result }}" == "success" ]]; then
          echo "status=success" >> $GITHUB_OUTPUT
          echo "color=good" >> $GITHUB_OUTPUT
          echo "emoji=✅" >> $GITHUB_OUTPUT
        else
          echo "status=failure" >> $GITHUB_OUTPUT
          echo "color=danger" >> $GITHUB_OUTPUT
          echo "emoji=❌" >> $GITHUB_OUTPUT
        fi
    
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_CHANNEL: '#qa-automation'
        SLACK_COLOR: ${{ steps.status.outputs.color }}
        SLACK_ICON: https://github.com/actions.png?size=48
        SLACK_MESSAGE: |
          ${{ steps.status.outputs.emoji }} Comercia Fintech Automation Pipeline
          
          *Status:* ${{ steps.status.outputs.status }}
          *Branch:* ${{ github.ref_name }}
          *Commit:* ${{ github.sha }}
          *Author:* ${{ github.actor }}
          
          📊 *View Reports:* https://${{ github.repository_owner }}.github.io/Comercia-Fintech-Automation/
        SLACK_TITLE: Test Pipeline Results
        SLACK_USERNAME: GitHub Actions
        SLACK_FOOTER: Powered by GitHub Actions
